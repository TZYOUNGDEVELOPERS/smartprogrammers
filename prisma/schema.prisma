// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  USER
  ADMIN
  TUTOR
}

enum Visibility {
  public
  private
}

model User {
   id                String  @id @default(cuid())
  name String  @unique
  email String @unique
  password String
  src String?
  courses Course[]
  episodes Episode[]
  students Student[]
  comments Comment[]
  projects Project[]
  posts Post[]
  role  Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Course{
 id                String  @id @default(cuid())
  name String
  src String
  userId String
  price  String
  discount String?
  students Student[]
  episodes Episode[]
  user User @relation(fields:[userId],references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Episode {
   id                String  @id @default(cuid())
  name String
  src String
  courseId String
  userId String
    course Course @relation(fields:[courseId],references:[id])
  user User @relation(fields:[userId],references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
   id                String  @id @default(cuid())
  name String
  courseId String
  src String
  userId String
  course Course @relation(fields:[courseId],references:[id])
  user User @relation(fields:[userId],references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post{
    id                String  @id @default(cuid())
  name String
  src String?
  description String
  userId String
  code  String?
  comments Comment[]
  user User @relation(fields:[userId],references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project{
    id                String  @id @default(cuid())
  name String
  src String?
  description String
  userId String
  visibility Visibility @default(public)
  user User @relation(fields:[userId],references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Comment {
    id                String  @id @default(cuid())
   description String
   src String?
  userId String
  postId String
  post Post @relation(fields: [postId],references: [id])
   user User @relation(fields:[userId],references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

